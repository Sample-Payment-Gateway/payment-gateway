import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage
import com.bmuschko.gradle.docker.tasks.image.DockerPushImage

plugins {
    id 'org.springframework.boot' version '2.7.5'
    id 'io.spring.dependency-management' version '1.0.15.RELEASE'
    id 'java'
    id 'com.bmuschko.docker-remote-api' version '7.3.0'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.apache.httpcomponents:httpclient:4.5.13'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
    useJUnitPlatform()
}

def dockerTag = System.getenv("DOCKER_TAG") ?: "latest"
def dockerRepository = System.getenv("DOCKER_REPO") ?: ""
def dockerImage = "${dockerRepository}payment/payment-gateway:${dockerTag}"

task dockerBuildImage(type: DockerBuildImage) {
    group "docker"
    doFirst {
        println("Building docker image: ${dockerImage}")
    }
    dependsOn bootJar
    inputDir.set(file('.'))
    images.add(dockerImage)
}

task dockerPushImage(type: DockerPushImage) {
    group "docker"
    doFirst {
        println("Pushing Docker image: ${dockerImage}")
    }
    images.add(dockerImage)
    dependsOn dockerBuildImage
}
